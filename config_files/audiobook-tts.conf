###########################################################################
#
#	Audiobook Tools: Online TTS, config file
#
#	Description: this is the config file for online-tts. 
#		Sets voices, languages, localizations, etc.  
#		Sets your prefered TTS service google-cloud-tts, 
#		google-translate-tts,
#
#
# edit this (global) file to set audible/aax authorization/activation code
#
# 
# add and edit (user-level) config file to override this file
#   *nix: ~/.config/audiobook-tools/
#   osx: ~/library/preferences/audiobook-tools/
#   windows: c:\users\<username>\appdata\local\audiobook-tools\audiobook-tools\
#
#
# command line arguments will override all config files	
#
#
# uncomment lines and change as needed, do not rearrange parameters
#
###########################################################################


[GENERAL]

## Select 'TTS Service' to use or 'Profile' to use
## options: voicerss_tts, google_translate_tts,  ms_azure_tts, profile*
##       unimplemneted: google_cloud_tts, amazon_polly, local
# tts_service = ms_azure_tts

## how many times tts conversion can fail before exit
# max_retries = 3

## Delay between requests to avoid clobbering servers (float)
# delay_between_requests = 1.5

## Remove non-European charator (non latin-1)
# remove_non_eu_chars = True

## Remove non-ASCII charator
# remove_non_ascii_chars = False

## Audio output format and settings
# output_format = mp3
# bitrate = 64k
# samplerate = 22050



##########################################################################
#  mimic3 TTS software
#
[mimic3_tts]

# voice to use in tts
# https://mycroftai.github.io/mimic3-voices/
# voice = en_UK/apope_low

# read speed changed the default speed of voice.  read_speed>1.0 is slower
# read_speed = 0.9

# spreads tts processing into multiply pieces to avoid memory problems
#  will still save into one file
# max_charactors = 2000

# prefered input file format (txt, ssml), 
#  will still accept ssml files as input even if set to txt, but will ignore all tags
# input_format = txt




##########################################################################
#  Coqui TTS (offline)
#
[coqui_tts]

# max_charactors = 2000
# audio_format = mp3

##########################################################################
#	Voice RSS TTS service
#
[voicerss]

# voice = Amy
# key = 63dddd6637f1b74b50260
# locale = en-us
# input_format = txt
# audio_format = mp3
# audio_settings = 16khz_16bit_stereo

## it seem you get a 404 if its too long
# max_charactors = 1000

## Delay between requests to avoid clobbering servers (float)
# delay_between_requests = 1.5




#########################################################################
# Microsoft Azure TTS
#
[ms_azure_tts]

# Install: pip install azure-cognitiveservices-speech
#
# Code Examples:
#	https://github.com/Azure-Samples/cognitive-services-speech-sdk/blob/master/samples/python/console/speech_synthesis_sample.py
#
# List of voices/locale
# 	https://docs.microsoft.com/azure/cognitive-services/speech-service/language-support
#
# Other settings:
# 	https://docs.microsoft.com/en-us/azure/cognitive-services/speech-service/rest-text-to-speech
#

# server_region = westus
# voice = en-US-AriaRUS
# key =
# locale = Female
# audio_settings = audio-16khz-64kbitrate-mono-mp3
# gender = en-US

# id = ???????????




###########################################################################
# Google Translate TTS
#
[google_translate_tts]
#  Google translate tts (not cloud):
#  https://pypi.org/project/gTTS/
#  install:  pip install gTTS

## language
## Execute for all options: gtts-cli --all
# lang = en

## top level domain (adds accents)
## See for options: https://gtts.readthedocs.io/en/latest/module.html
# tld = com

## speed: slow = True/False (not implemented)
# slow = False

## Max charators sent in increments
# max_charactors = 3000



###########################################################################
# Google Cloud Text-to-Speach
#   (Unimplemented)
[google_cloud_tts]
# not implimented yet
# you can add support by adding it to tts_service_APIs.py
#
# 	https://googleapis.dev/python/texttospeech/latest/index.html
#	install: pip install google-cloud-texttospeech




###########################################################################
# Amazon Polly
#   (Unimplemented)
#
[amazon_polly]
# not implimented yet, 
# you can add support by adding it to tts_service_APIs.py
#
# install: pip install boto3



###########################################################################
# Offline TTS (local)
#   (Not implemented yet)
[offline_tts]
# Off-line TTS (using local programs, espeak/etc)
# 	(Unimplemented)
# 	install: pip install pyttsx2

# rate = 
# volume = 
# voice = 


##########################################################################
# 	Profile1
#     (Unimplemented)
[profile1]

# tts_service = voicerss
# voice = Bob
# key = 6c4baddddddddddd26bdd3650260
# locale = en-us
# input_format = txt
# audio_format = mp3
# audio_settings = 16khz_16bit_stereo

#########################################################################
# 	Profile2
#     (Unimplemented)
[profile2]


